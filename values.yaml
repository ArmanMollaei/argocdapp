image:
  repository: velero/velero
  tag: v1.14.1
  pullPolicy: IfNotPresent

initContainers:
  - name: velero-plugin-for-local
    image: openebs/velero-plugin:latest
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins

credentials:
  useSecret: false

configuration:
  backupStorageLocation:
    - name: default
      provider: openebs.io/localpath
      default: true
      accessMode: ReadWrite
      config:
        path: /data/velero/backups
      annotations: {}

  volumeSnapshotLocation:
    - name: default
      provider: openebs.io/localpath
      config: {}
      annotations: {}

  defaultBackupStorageLocation: default
  defaultVolumeSnapshotLocations: default

rbac:
  create: true
  clusterAdministrator: true
  clusterAdministratorName: cluster-admin

serviceAccount:
  server:
    create: true

metrics:
  enabled: true
  scrapeInterval: 30s
  scrapeTimeout: 10s
  service:
    annotations: {}
    labels: {}
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8085"
      prometheus.io/path: "/metrics"
  serviceMonitor:
    autodetect: true
    enabled: false
    annotations: {}
    additionalLabels: {}
  nodeAgentPodMonitor:
    autodetect: true
    enabled: false
    annotations: {}
    additionalLabels: {}
  prometheusRule:
    autodetect: false
    enabled: false
    additionalLabels: {}
    spec: []

extraVolumes: []
extraVolumeMounts: []

resources: {}
upgradeJobResources: {}

backupSyncPeriod:
fsBackupTimeout:
defaultBackupTTL:
defaultItemOperationTimeout:

logLevel: info
restoreOnlyMode: false
pluginDir: /plugins
metricsAddress: :8085

deployRestic: false
deployNodeAgent: false
backupsEnabled: true
snapshotsEnabled: true
upgradeCRDs: true
cleanUpCRDs: false

nodeAgent:
  podVolumePath: /var/lib/kubelet/pods
  useScratchEmptyDir: true
  podSecurityContext:
    runAsUser: 0

dnsPolicy: ClusterFirst
tolerations: []
affinity: {}
nodeSelector: {}
dnsConfig: {}

# Optional: allow backup schedules here if you want automatic recurring backups
schedules: {}

# Optional: disable cloud provider stuff entirely
credentials:
  useSecret: false
